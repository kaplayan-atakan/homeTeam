const { MongoClient } = require('mongodb');

async function checkAdminRole() {
  const client = new MongoClient('mongodb://localhost:27018/hometeam');
  
  try {
    await client.connect();
    console.log('üìÅ MongoDB baƒülantƒ±sƒ± ba≈üarƒ±lƒ±');
    
    const db = client.db('hometeam');
    const usersCollection = db.collection('users');
    
    // Admin kullanƒ±cƒ±sƒ±nƒ± bul
    const adminUser = await usersCollection.findOne({ email: 'admin@hometeam.com' });
    
    if (adminUser) {
      console.log('\nüë§ Admin Kullanƒ±cƒ± Bulundu:');
      console.log('üìß Email:', adminUser.email);
      console.log('üÜî ID:', adminUser._id);
      console.log('üë• Rol:', adminUser.role);
      console.log('‚úÖ Aktif:', adminUser.isActive);
      console.log('üìÖ Olu≈üturulma:', adminUser.createdAt);
      console.log('üîê OAuth Provider:', adminUser.oauthProvider);
      
      // Rol kontrol√º
      if (adminUser.role === 'ADMIN') {
        console.log('\n‚úÖ Kullanƒ±cƒ±nƒ±n ADMIN rol√º var');
      } else {
        console.log('\n‚ùå Kullanƒ±cƒ±nƒ±n ADMIN rol√º YOK - Mevcut rol:', adminUser.role);
        
        // Admin rol√º ata
        const updateResult = await usersCollection.updateOne(
          { email: 'admin@hometeam.com' },
          { $set: { role: 'ADMIN' } }
        );
        
        if (updateResult.modifiedCount > 0) {
          console.log('üîß Admin rol√º ba≈üarƒ±yla atandƒ±!');
        }
      }
    } else {
      console.log('‚ùå admin@hometeam.com kullanƒ±cƒ±sƒ± bulunamadƒ±');
    }
    
    // T√ºm kullanƒ±cƒ±larƒ± listele
    console.log('\nüìã T√ºm Kullanƒ±cƒ±lar:');
    const allUsers = await usersCollection.find({}).toArray();
    allUsers.forEach((user, index) => {
      console.log(`${index + 1}. ${user.email} - ${user.role} - ${user.isActive ? 'Aktif' : 'Pasif'}`);
    });
    
  } catch (error) {
    console.error('‚ùå Hata:', error.message);
  } finally {
    await client.close();
  }
}

checkAdminRole();
